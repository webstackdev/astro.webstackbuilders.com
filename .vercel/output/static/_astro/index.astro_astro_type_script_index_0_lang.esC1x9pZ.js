class h{elements;config;constructor(e,t){this.elements=e,this.config={maxCharacters:2e3,warningThreshold:1500,errorThreshold:1800,apiEndpoint:"/api/contact",...t},this.init()}init(){this.setupCharacterCounter(),this.setupFileUploadPlaceholder(),this.setupFormSubmission(),this.setupFormValidation(),this.addErrorStyles()}setupCharacterCounter(){this.elements.messageTextarea.addEventListener("input",()=>{const e=this.elements.messageTextarea.value.length;this.elements.charCount.textContent=e.toString(),e>this.config.errorThreshold?this.elements.charCount.style.color="#ef4444":e>this.config.warningThreshold?this.elements.charCount.style.color="#f59e0b":this.elements.charCount.style.color="#6b7280"})}setupFileUploadPlaceholder(){this.elements.uppyContainer&&(this.elements.uppyContainer.innerHTML=`
        <div style="padding: 2rem; text-align: center; color: #6b7280;">
          <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" style="margin-bottom: 1rem; opacity: 0.5;">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
            <polyline points="14,2 14,8 20,8"></polyline>
            <line x1="16" y1="13" x2="8" y2="13"></line>
            <line x1="16" y1="17" x2="8" y2="17"></line>
            <polyline points="10,9 9,9 8,9"></polyline>
          </svg>
          <p style="margin: 0; font-size: 1rem; font-weight: 500;">File Upload Coming Soon</p>
          <p style="margin: 0.5rem 0 0 0; font-size: 0.85rem;">In production, this would integrate with Uppy.js for drag-and-drop file uploads</p>
        </div>
      `)}setupFormSubmission(){this.elements.form.addEventListener("submit",async e=>{e.preventDefault(),await this.handleFormSubmission()})}async handleFormSubmission(){this.setLoadingState(!0),this.hideMessages();try{const e=new FormData(this.elements.form),t=Object.fromEntries(e.entries()),s=await fetch(this.config.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await s.json();if(s.ok&&n.success)this.showSuccessMessage(),this.resetForm();else throw new Error(n.error||"Failed to send message")}catch(e){this.showErrorMessage(e.message||"Something went wrong. Please try again later.")}finally{this.setLoadingState(!1)}}setLoadingState(e){this.elements.submitBtn.disabled=e,e?(this.elements.btnText.style.display="none",this.elements.btnLoading.classList.remove("hidden"),this.elements.btnLoading.style.display="flex"):(this.elements.btnText.style.display="inline",this.elements.btnLoading.classList.add("hidden"),this.elements.btnLoading.style.display="none")}showSuccessMessage(){this.elements.messages.style.display="block",this.elements.successMessage.classList.remove("hidden"),this.elements.successMessage.style.display="flex",this.elements.errorMessage.classList.add("hidden"),this.elements.errorMessage.style.display="none"}showErrorMessage(e){this.elements.messages.style.display="block",this.elements.successMessage.classList.add("hidden"),this.elements.successMessage.style.display="none",this.elements.errorMessage.classList.remove("hidden"),this.elements.errorMessage.style.display="flex",this.elements.errorText.textContent=e}hideMessages(){this.elements.messages.style.display="none"}resetForm(){this.elements.form.reset(),this.elements.charCount.textContent="0"}setupFormValidation(){this.elements.form.querySelectorAll("input, select, textarea").forEach(t=>{t.addEventListener("blur",()=>{this.validateField(t)}),t.addEventListener("input",()=>{t.classList.contains("error")&&this.validateField(t)})})}validateField(e){const t=e.value.trim();let s=!0,n="";e.classList.remove("error");const i=e.parentNode?.querySelector(".field-error");if(i&&i.remove(),e.hasAttribute("required")&&!t?(s=!1,n="This field is required"):e.type==="email"&&t?/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)||(s=!1,n="Please enter a valid email address"):e.hasAttribute("minlength")&&t.length<parseInt(e.getAttribute("minlength")||"0")?(s=!1,n=`Minimum ${e.getAttribute("minlength")} characters required`):e.hasAttribute("maxlength")&&t.length>parseInt(e.getAttribute("maxlength")||"0")&&(s=!1,n=`Maximum ${e.getAttribute("maxlength")} characters allowed`),!s){e.classList.add("error");const r=document.createElement("div");r.className="field-error",r.textContent=n,r.style.cssText="color: #ef4444; font-size: 0.85rem; margin-top: 0.25rem;",e.parentNode?.appendChild(r)}return s}addErrorStyles(){const e=document.createElement("style");e.textContent=`
      .form-input.error,
      .form-select.error,
      .form-textarea.error {
        border-color: #ef4444;
        box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
      }
    `,document.head.appendChild(e)}}function u(){const o=document.getElementById("contactForm");if(!o)return null;const e=document.getElementById("formMessages"),t=e.querySelector(".message-success"),s=e.querySelector(".message-error"),n=document.getElementById("errorMessage"),i=document.getElementById("submitBtn"),r=i.querySelector(".btn-text"),a=i.querySelector(".btn-loading"),l=document.getElementById("message"),m=document.getElementById("charCount"),c=document.getElementById("uppyContainer"),d={form:o,messages:e,successMessage:t,errorMessage:s,errorText:n,submitBtn:i,btnText:r,btnLoading:a,messageTextarea:l,charCount:m,uppyContainer:c};return new h(d)}document.addEventListener("DOMContentLoaded",function(){u()});
