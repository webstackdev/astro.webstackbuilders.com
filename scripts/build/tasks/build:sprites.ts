/**
 * Build an svg sprite image based on the svg image files in
 * src/assets/icons and save it as public/images/site/icons.sprite.svg
 */
import { log } from "../../../src/lib/logger"
import { dest, src, type TaskFunction } from "gulp"
import header from "gulp-header"
import svgSprite from "gulp-svg-sprite"
import type { Config } from "svg-sprite"

const spritesInputDir = `src/assets/images/sprite`
const spritesOutputDir = `src/components`

const spriterConfig: Config = {
  log: 'info',
  /** Output mode configurations */
  mode: {
    /**
     * Prevent the creation of SVG namespace declarations and to set some other
     * attributes for effectively hiding the library sprite.
     */
    inline: true,
    /** Create a sprite svg image that uses <symbol> tags for each individual icon */
    symbol: {
      /**
       * SVG sprite file name and path. By defaults, creates and places the file in a directory named 'symbol'.
       */
      sprite: '../GeneratedSprites.astro',
    },
  },
  /** SVG shape related options */
  shape: {
    /** SVG shape ID related options */
    id: {
      /** SVG shape ID generator callback */
      generator: 'icon-%s',
    },
    /** Path to a YAML file with 'title' and/or 'description' meta data to be injected into the SVG shapes. */
    meta: `${spritesInputDir}/sprites.meta.yaml`,
    /** List of transformations / optimizations */
    transform: ['svgo'],
  },
  /** General options for created SVG files */
  svg: {
    /** Don't add DOCTYPE declaration to SVG sprite */
    doctypeDeclaration: false,
    /** Don't add XML declaration to SVG sprite */
    xmlDeclaration: false,
  },
}

const task: TaskFunction = () => {
  log(`Building SVG sprites`)
  return (
    src('**/*.svg', { cwd: spritesInputDir })
      .pipe(svgSprite(spriterConfig))
      .pipe(header(`{/* THIS FILE IS AUTOMATICALLY GENERATED BY GULP BUILD:SPRITES TASK. DO NOT EDIT. */}\n`))
      .pipe(dest(spritesOutputDir))
      .on('finish', () => log(`Sprites compiled to ${spritesOutputDir}`, `green`))
  )
}

export default task
