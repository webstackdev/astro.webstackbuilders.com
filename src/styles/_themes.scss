@use "sass:map";

/**
 * Theme configuration using Tailwind color palette and custom brand colors.
 * Colors have been mapped from the previous SCSS color system to the closest
 * Tailwind equivalents for consistency and maintainability.
 *
 * Offset colors are used to adjust another color on interactions like hover.
 */
$light: (
  id: 'default',
  name: 'Light',
  backgroundColor: #f3f4f6,
  backgroundOffsetColor: #e5e7eb,
  textColor: #374151,
  textOffsetColor: #9ca3af,
  borderColor: #f0f4ff,
  primaryColor: #006dca,
  primaryOffsetColor: #00386d,
  secondaryColor: #facc15,
  secondaryColorOffset: #ca8a04,
  modalBackground: #f3f4f6,
  successColor: #16a34a,
  successColorOffset: #22c55e,
  infoColor: #0891b2,
  warningColor: #a16207,
  warningColorOffset: #ca8a04,
  dangerColor: #dc2626,
  twitterColor: #1da1f2,
  shikiTheme: 'github-light',
);

$dark: (
  id: 'dark',
  name: 'Dark',
  backgroundColor: #001a39,
  backgroundOffsetColor: #00386d,
  textColor: #f3f4f6,
  textOffsetColor: #e5e7eb,
  borderColor: #222222,
  primaryColor: #f3f4f6,
  primaryOffsetColor: #e5e7eb,
  secondaryColor: #facc15,
  secondaryColorOffset: #ca8a04,
  modalBackground: #f3f4f6,
  successColor: #16a34a,
  successColorOffset: #22c55e,
  infoColor: #0891b2,
  warningColor: #a16207,
  warningColorOffset: #ca8a04,
  dangerColor: #dc2626,
  twitterColor: #1da1f2,
  shikiTheme: 'github-dark',
);

$themes: $light, $dark;

@function get-var($theme, $prop) {
  $value: map.get($theme, $prop);
  @return $value;
}

@mixin css-vars($theme) {
  --color-bg: #{get-var($theme, "backgroundColor")};
  --color-bg-offset: #{get-var($theme, "backgroundOffsetColor")};
  --color-text: #{get-var($theme, "textColor")};
  --color-text-offset: #{get-var($theme, "textOffsetColor")};
  --color-border: #{get-var($theme, "borderColor")};
  --color-primary: #{get-var($theme, "primaryColor")};
  --color-primary-offset: #{get-var($theme, "primaryOffsetColor")};
  --color-secondary: #{get-var($theme, "secondaryColor")};
  --color-secondary-offset: #{get-var($theme, "secondaryColorOffset")};
  --color-modal-background: #{get-var($theme, "modalBackground")};
  --color-success: #{get-var($theme, "successColor")};
  --color-success-offset: #{get-var($theme, "successColorOffset")};
  --color-info: #{get-var($theme, "infoColor")};
  --color-warning: #{get-var($theme, "warningColor")};
  --color-warning-offset: #{get-var($theme, "warningColorOffset")};
  --color-danger: #{get-var($theme, "dangerColor")};
  --color-twitter: #{get-var($theme, "twitterColor")};
  --shiki-theme: #{get-var($theme, "shikiTheme")};
}

:root {
  @include css-vars($light);
}

@media(prefers-color-scheme: dark) {
  :root {
    @include css-vars($dark);
  }
}

@each $theme in $themes {
  $dataTheme: get-var($theme, "id");
  [data-theme="#{$dataTheme}"] {
    @include css-vars($theme);
  }
}
