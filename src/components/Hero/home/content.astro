---
/**
 * Hero Content Column - Home Variant
 */
import Sprite from "../../Sprite/index.astro"
import type { HomeContentProps as Props } from '../@types/content'

export type { Props }

const { pretitle, benefits, primaryLink, secondaryLink } = Astro.props
---

{/* Content Column */}
<div class="order-2 lg:order-1 space-y-6">
  {/* Pretitle */}
  <span class="inline-block text-sm md:text-base font-bold tracking-wide text-[var(--color-primary)] uppercase">
    {pretitle}
  </span>

  {/* Main Title */}
  <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-[var(--color-text)] leading-tight">
    Building Modern Web Solutions That Drive Results
  </h1>

  {/* Benefits Section */}
  {benefits && benefits.length > 0 && (
    <div class="bg-[var(--color-bg-offset)] rounded-2xl p-6 md:p-8 border border-[var(--color-border)]">
      <div class="text-sm font-semibold text-[var(--color-text-offset)] mb-4 uppercase tracking-wide">
        Up to:
      </div>
      <ul class="space-y-4">
        {benefits.map(benefit => (
          <li class="flex items-start gap-3">
            <span class="flex-shrink-0 w-6 h-6 text-[var(--color-success)] [&_.icon]:w-6 [&_.icon]:h-6 [&_.icon]:stroke-current">
              <Sprite name="check" />
            </span>
            <span class="text-base md:text-lg text-[var(--color-text)]">
              <strong class="font-bold text-[var(--color-primary)]">{benefit.highlight}</strong>
              {' '}{benefit.text}
            </span>
          </li>
        ))}
      </ul>
    </div>
  )}

  {/* CTA Links */}
  <div class="flex flex-col sm:flex-row gap-4 pt-2">
    {primaryLink && (
      <a
        href={primaryLink.href}
        class="group inline-block px-8 py-4 bg-[var(--color-primary)] hover:bg-[var(--color-primary-hover)] text-white font-semibold rounded-xl transition-all duration-200 hover:shadow-lg hover:-translate-y-0.5 text-center"
      >
        {primaryLink.text}
        <svg class="inline-block w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
        </svg>
      </a>
    )}
    {secondaryLink && (
      <a
        href={secondaryLink.href}
        class="group inline-block px-8 py-4 bg-transparent border-2 border-[var(--color-border)] hover:border-[var(--color-primary)] text-[var(--color-text)] hover:text-[var(--color-primary)] font-semibold rounded-xl transition-all duration-200 text-center"
      >
        {secondaryLink.text}
        <svg class="inline-block w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
        </svg>
      </a>
    )}
  </div>
</div>