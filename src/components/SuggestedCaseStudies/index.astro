---
// SuggestedCaseStudies component for displaying related case studies
import { getCollection } from 'astro:content'
import { formatDate, toISODate } from '../../lib/utils/date'

export interface Props {
  currentSlug?: string
  limit?: number
  title?: string
}

const {
  currentSlug,
  limit = 6,
  title = "Related Case Studies"
} = Astro.props

// Get all case studies from content collection
const allCaseStudies = await getCollection('caseStudies')

// Filter out current case study and get latest case studies
const suggestedCaseStudies = allCaseStudies
  .filter(caseStudy => caseStudy.id !== currentSlug)
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
  .slice(0, limit)
---

{suggestedCaseStudies.length > 0 && (
  <section>
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">{title}</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {suggestedCaseStudies.map((caseStudy) => (
        <article class="bg-white dark:bg-gray-800 rounded-xl shadow-md hover:shadow-lg transition-all duration-300 hover:-translate-y-1 overflow-hidden group">
          <a href={`/case-studies/${caseStudy.id}/`} class="block h-full">
            {caseStudy.data.image && (
              <div class="aspect-video overflow-hidden">
                <img
                  src={typeof caseStudy.data.image === 'string' ? caseStudy.data.image : caseStudy.data.image.src}
                  alt={typeof caseStudy.data.image === 'string' ? caseStudy.data.title : caseStudy.data.image.alt}
                  loading="lazy"
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
              </div>
            )}

            <div class="p-4 space-y-3">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white leading-tight group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-300" itemprop="headline">
                {caseStudy.data.title}
              </h3>

              {caseStudy.data.description && (
                <p class="text-gray-600 dark:text-gray-300 text-sm leading-relaxed line-clamp-2" itemprop="abstract">
                  {caseStudy.data.description}
                </p>
              )}

              <time
                class="block text-sm text-gray-500 dark:text-gray-400"
                itemprop="datePublished"
                datetime={toISODate(caseStudy.data.publishDate)}
              >
                {formatDate(caseStudy.data.publishDate, 'MMMM yyyy')}
              </time>

              {caseStudy.data.tags && (
                <div class="flex flex-wrap gap-1 pt-1">
                  {caseStudy.data.tags.slice(0, 3).map((tag: string) => (
                    <span class="text-xs font-medium text-gray-600 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </a>
        </article>
      ))}
    </div>
  </section>
)}