---
/**
 * IconButton component - Replaces .icon-btn SCSS class functionality
 * Centers icons within a clickable button container
 */
import classNames from 'classnames'

export interface Props {
  /** Additional CSS classes */
  class?: string
  /** Button type */
  type?: 'button' | 'submit' | 'reset'
  /** Whether button is disabled */
  disabled?: boolean
  /** ARIA label for accessibility */
  ariaLabel?: string
  /** ARIA expanded state for toggle buttons */
  ariaExpanded?: boolean
  /** ARIA controls attribute */
  ariaControls?: string
  /** ARIA owns attribute */
  ariaOwns?: string
  /** ARIA haspopup attribute */
  ariaHaspopup?: boolean | 'true' | 'false' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'
  /** Button ID */
  id?: string
  /** Click handler function name (for client-side scripts) */
  onClick?: string
}

const {
  class: additionalClasses = '',
  type = 'button',
  disabled = false,
  ariaLabel,
  ariaExpanded,
  ariaControls,
  ariaOwns,
  ariaHaspopup,
  id,
  onClick,
  ...rest
} = Astro.props

// Base IconButton classes (converted from .icon-btn SCSS)
const baseClasses = [
  // Layout & centering
  'flex',
  'items-center',
  'justify-center',
  'text-center',

  // Size (converted from 3rem = 48px)
  'h-12',
  'w-12',

  // Reset padding
  'p-0',

  // Disabled state
  'disabled:opacity-50',
  'disabled:cursor-not-allowed',
].join(' ')

// Combine all classes
const buttonClasses = classNames(baseClasses, additionalClasses)
---

<button
  type={type}
  class={buttonClasses}
  disabled={disabled}
  id={id}
  aria-label={ariaLabel}
  aria-expanded={ariaExpanded}
  aria-controls={ariaControls}
  aria-owns={ariaOwns}
  aria-haspopup={ariaHaspopup}
  onclick={onClick}
  {...rest}
>
  <slot />
</button>

<style>
  /* iOS Safari compatibility - auto margin for icon centering */
  button :global(.icon) {
    margin: auto;
  }
</style>