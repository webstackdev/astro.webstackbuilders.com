---
// Services component for displaying featured services on home page
import { getCollection } from 'astro:content'

export interface Props {
  title?: string
  limit?: number
  featured?: boolean
}

const {
  title = "Featured Services",
  limit = 3,
  featured = true
} = Astro.props

// Get all services from content collection
const allServices = await getCollection('services')

// Filter and sort services - optimized for home page featured services
let services = allServices
  .filter(service => featured ? service.data.featured === true : true)
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())

// Apply limit
if (limit) {
  services = services.slice(0, limit)
}
---

{services.length > 0 && (
  <section class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <header class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-[color:var(--color-text)]">{title}</h2>
    </header>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {services.map((service) => (
        <article class="group">
          <a
            href={`/services/${service.id}/`}
            class="block h-full bg-[color:var(--color-bg)] rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-[color:var(--color-border)] hover:border-[color:var(--color-primary)] transform hover:-translate-y-2"
          >
            {service.data.icon && (
              <div class="p-6 pb-4">
                <div class="w-12 h-12 bg-[color:var(--color-bg-offset)] rounded-lg flex items-center justify-center group-hover:bg-[color:var(--color-primary)] group-hover:bg-opacity-20 transition-colors">
                  <img
                    src={service.data.icon}
                    alt=""
                    loading="lazy"
                    class="w-6 h-6"
                  />
                </div>
              </div>
            )}
            <div class="p-6 pt-2">
              <h3 class="text-xl font-semibold text-[color:var(--color-text)] mb-3 group-hover:text-[color:var(--color-primary)] transition-colors">
                {service.data.title}
              </h3>
              {service.data.description && (
                <p class="text-[color:var(--color-text-offset)] leading-relaxed text-sm">
                  {service.data.description}
                </p>
              )}
              <div class="mt-4 flex items-center text-[color:var(--color-primary)] text-sm font-medium opacity-0 group-hover:opacity-100 transition-opacity">
                <span>Learn more</span>
                <svg class="ml-1 w-4 h-4 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                </svg>
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>
  </section>
)}