---
import Sprite from '@components/Sprite/index.astro'
import type { SpriteName } from '@components/Sprite/sprites'

export interface Props {
  type?: 'warning' | 'action' | 'tip' | 'info' | 'note'
}

const { type = 'info' } = Astro.props

// Map callout types to sprite icons
const iconMap: Record<string, SpriteName> = {
  warning: 'warning',
  action: 'warning',
  info: 'info',
  tip: 'lightbulb',
  note: 'question',
}

// Map callout types to their background color CSS custom properties
const backgroundColorMap: Record<string, string> = {
  warning: 'var(--color-danger-bg)',
  action: 'var(--color-danger-bg)',
  info: 'var(--color-info-bg)',
  tip: 'var(--color-bg-offset)',
  note: 'var(--color-bg-offset)',
}

// Map callout types to their border/icon color CSS custom properties
const borderColorMap: Record<string, string> = {
  warning: 'var(--color-danger)',
  action: 'var(--color-danger)',
  info: 'var(--color-info)',
  tip: 'var(--color-text)',
  note: 'var(--color-text)',
}

const icon: SpriteName = iconMap[type] as SpriteName
const backgroundColor = backgroundColorMap[type]
const borderColor = borderColorMap[type]
---

<style define:vars={{ backgroundColor, borderColor }}>
  .callout {
    background-color: var(--backgroundColor);
    border-left-color: var(--borderColor);
  }

  .callout__icon {
    color: var(--borderColor);
  }

  /* Spacing for nested elements */
  .callout__content > * + * {
    margin-top: 2rem;
  }
</style>

<div class="callout border border-[var(--color-border)] border-l-0 rounded-r-lg relative pl-6">
  <div class="callout__icon bg-[var(--color-bg)] rounded-full absolute left-0 top-0 ml-0.5 p-1 -translate-x-1/2 -translate-y-1/2">
    <Sprite name={icon} size={20} />
  </div>

  <div class="callout__content border-l-4 p-4 md:pl-8">
    <slot />
  </div>
</div>