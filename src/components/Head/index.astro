---
import { ClientRouter } from 'astro:transitions'
import Meta from '@components/Head/Meta.astro'

export interface Props {
  pageTitle: string
  path: string
  description?: string
  image?: string
}

const { pageTitle, path, description, image } = Astro.props
---

<head>
  <title>{pageTitle}</title>
  {/* Site <meta> tags, Open Graph social tags, and favicon, PWA manifest, */}
  {/* RSS, canonical, pingback, and webmention links  */}
  <Meta
    pageTitle={pageTitle}
    path={path}
    {...description && { description }}
    {...image && { image }}
  />
  {/* Set theme name on <html> element from storage early to prevent flash of  */}
  {/* unstyled content. IMPORTANT: This violates invariant rules and is intentional. */}
  <script is:inline>
    const storedTheme = localStorage.getItem('theme')
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
    const theme = storedTheme ?? (prefersDark ? 'dark' : 'default')
    document.documentElement.setAttribute('data-theme', theme)
  </script>

  <script>
    {/* Initialize error handlers */}
    {/* Production: Sentry handles errors with replay, breadcrumbs, and remote tracking */}
    {/* Development: Custom handlers log errors to console for debugging */}
    import { SentryBootstrap } from '@components/Scripts/sentry/client'
    import { PUBLIC_SENTRY_DSN } from 'astro:env/client'

    if ( import.meta.env.PROD && PUBLIC_SENTRY_DSN) {
      SentryBootstrap.init()
    } else {
      // Development: Use custom error handlers with console logging
      const { addErrorEventListeners } = await import('@components/Scripts/errors/errorListeners')
      addErrorEventListeners()
      console.info('ðŸ”§ Sentry disabled in development mode')
    }

    // Initialize AppBootstrap FIRST - initializes state management
    // MUST run before any scripts that depend on state
    import { AppBootstrap } from '@components/Scripts/state/bootstrap'

    AppBootstrap.init()
  </script>
  {/* Client-side router for Astro pages (enables partial page reloads) */}
  {/* Must be placed at the end of the <head> to avoid blocking page rendering */}
  <ClientRouter />
</head>