---
// Testimonials component for displaying client testimonials
import { getCollection } from 'astro:content'
import Avatar from '@components/Avatar/index.astro'

export interface Props {
  title?: string
  limit?: number
}

const {
  title = "Testimonials",
  limit
} = Astro.props

// Get all testimonials from content collection
const allTestimonials = await getCollection('testimonials')

// Sort by publishDate (newest first) and apply limit if specified
const testimonials = allTestimonials
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
  .slice(0, limit || allTestimonials.length)
---

<div class="glide max-w-4xl mx-auto py-8 px-4">
  <h1 class="text-3xl font-bold text-center mb-8">{title}</h1>

  <div class="glide__track" data-glide-el="track">
    <ul class="glide__slides">
      {testimonials.map((testimonial) => {
        return (
          <li class="glide__slide">
            <div class="bg-[color:var(--color-bg-offset)] rounded-lg p-8 shadow-lg">
              <div class="text-xl font-semibold mb-2">{testimonial.data.name}</div>
              <div class="text-sm text-[color:var(--color-text-offset)] mb-4">{testimonial.data.organization}</div>
              <div class="text-base leading-relaxed mb-6">
                {testimonial.body}
              </div>
              <Avatar
                name={testimonial.data.name}
                class="mx-auto"
              />
            </div>
          </li>
        )
      })}
    </ul>
  </div>

  <div class="glide__arrows" data-glide-el="controls">
    <button
      class="glide__arrow glide__arrow--left absolute left-0 top-1/2 -translate-y-1/2 bg-[color:var(--color-bg-offset)] hover:bg-[color:var(--color-primary)] text-[color:var(--color-text)] hover:text-white rounded-full w-12 h-12 flex items-center justify-center text-2xl transition-colors duration-200 shadow-md"
      data-glide-dir="<"
      aria-label="Previous testimonial"
    >
      ‹
    </button>
    <button
      class="glide__arrow glide__arrow--right absolute right-0 top-1/2 -translate-y-1/2 bg-[color:var(--color-bg-offset)] hover:bg-[color:var(--color-primary)] text-[color:var(--color-text)] hover:text-white rounded-full w-12 h-12 flex items-center justify-center text-2xl transition-colors duration-200 shadow-md"
      data-glide-dir=">"
      aria-label="Next testimonial"
    >
      ›
    </button>
  </div>

  <div class="glide__bullets flex justify-center gap-2 mt-6" data-glide-el="controls[nav]">
    {testimonials.map((_, index) => (
      <button
        class="glide__bullet w-3 h-3 rounded-full bg-[color:var(--color-text-offset)] hover:bg-[color:var(--color-primary)] transition-colors duration-200"
        data-glide-dir={`=${index}`}
        aria-label={`Go to testimonial ${index + 1}`}
      ></button>
    ))}
  </div>
</div>

<script>
  import './index.ts'
</script>
