---
/**
 * Social media sharing component with buttons for various platforms
 */
import Sprite from '../../Sprite/index.astro'
import type { SpriteName } from '../../Sprite/sprites'

export interface Props {
  /** Page URL to share */
  url: string
  /** Page title to share */
  title: string
  /** Page description to share */
  description?: string
  /** Social image URL */
  image?: string
  /** Additional CSS classes */
  class?: string
  /** Show as horizontal or vertical layout */
  layout?: 'horizontal' | 'vertical'
  /** Which social networks to show */
  socialNetworks?: ('twitter' | 'linkedin' | 'bluesky' | 'mastodon')[]
}

const {
  url,
  title,
  description = '',
  class: additionalClasses = '',
  layout = 'horizontal',
  socialNetworks = ['twitter', 'linkedin', 'bluesky', 'mastodon']
} = Astro.props

// Encode parameters for URLs
const encodedUrl = encodeURIComponent(url)
const encodedTitle = encodeURIComponent(title)
const encodedDescription = encodeURIComponent(description)

// Social sharing URLs
const shareUrls = {
  twitter: `https://twitter.com/intent/tweet?url=${encodedUrl}&text=${encodedTitle}${description ? `%20-%20${encodedDescription}` : ''}`,
  linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}&title=${encodedTitle}&summary=${encodedDescription}`,
  bluesky: `https://bsky.app/intent/compose?text=${encodedTitle}%20${encodedUrl}`,
  mastodon: `https://k8s.social/share?text=${encodedTitle}%20${encodedUrl}`
}

// Social network configurations
const socialNetworkConfig = {
  twitter: {
    name: 'X (Twitter)',
    icon: 'twitter',
    color: 'bg-[#1DA1F2] hover:bg-[#1a91da]'
  },
  linkedin: {
    name: 'LinkedIn',
    icon: 'linkedin',
    color: 'bg-[#0077b5] hover:bg-[#005885]'
  },
  bluesky: {
    name: 'Bluesky',
    icon: 'bluesky',
    color: 'bg-[#00A8E8] hover:bg-[#0087bd]'
  },
  mastodon: {
    name: 'Mastodon',
    icon: 'mastodon',
    color: 'bg-[#6364FF] hover:bg-[#4547d9]'
  }
}

const containerClasses = [
  'social-share',
  layout === 'horizontal' ? 'flex flex-wrap gap-3' : 'flex flex-col gap-2',
  additionalClasses
].filter(Boolean).join(' ')
---
<style>
  /* Additional styling for social share component */
  .social-share__button:hover {
    transform: translateY(-1px);
  }

  .social-share__button:active {
    transform: translateY(0);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .social-share {
      justify-content: center;
    }

    .social-share__label {
      width: 100%;
      text-align: center;
      margin-bottom: 0.5rem;
    }
  }
</style>

<div class={containerClasses} role="group" aria-label="Share this content">
  <span class="social-share__label text-sm font-semibold text-[color:var(--color-text-offset)] mr-2 self-center">
    Share:
  </span>

  {socialNetworks.map((socialNetwork) => {
    const config = socialNetworkConfig[socialNetwork]
    const shareUrl = shareUrls[socialNetwork]

    return (
      <a
        href={shareUrl}
        target="_blank"
        rel="noopener noreferrer"
        class={`social-share__button inline-flex items-center gap-2 px-4 py-2 rounded-lg text-white font-medium transition-colors ${config.color} hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}
        aria-label={`Share on ${config.name}`}
      >
        <Sprite name={config.icon as SpriteName} class="h-4 w-4 fill-current" />
        <span class="hidden sm:inline">{config.name}</span>
      </a>
    )
  })}
</div>

<script>
  import { setupSocialShare } from './client'

  document.addEventListener('DOMContentLoaded', setupSocialShare)
</script>