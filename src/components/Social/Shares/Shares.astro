---
/**
 * Social media sharing component with buttons for various platforms
 */
import Sprite from '../../Sprite/index.astro'
import type { SpriteName } from '../../Sprite/sprites'
import { platforms, type ShareData } from '../common'

export interface Props {
  /** Page URL to share */
  url: string
  /** Page title to share */
  title: string
  /** Page description to share */
  description?: string
  /** Social image URL */
  image?: string
  /** Additional CSS classes */
  class?: string
  /** Show as horizontal or vertical layout */
  layout?: 'horizontal' | 'vertical'
  /** Which social networks to show */
  socialNetworks?: ('twitter' | 'linkedin' | 'bluesky' | 'reddit' | 'mastodon')[]
}

const {
  url,
  title,
  description = '',
  class: additionalClasses = '',
  layout = 'horizontal',
  socialNetworks = ['twitter', 'linkedin', 'bluesky', 'reddit', 'mastodon'],
} = Astro.props

// Create share data
const shareData: ShareData = {
  text: description ? `${title} - ${description}` : title,
  url,
  title,
}

// Filter platforms based on requested networks
const selectedPlatforms = platforms.filter(platform =>
  socialNetworks.includes(platform.id as (typeof socialNetworks)[number])
)

const containerClasses = [
  'social-share',
  layout === 'horizontal' ? 'flex flex-wrap gap-3' : 'flex flex-col gap-2',
  additionalClasses,
]
  .filter(Boolean)
  .join(' ')
---

<style>
  /* Additional styling for social share component */
  .social-share__button:hover {
    transform: translateY(-1px);
  }

  .social-share__button:active {
    transform: translateY(0);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .social-share {
      justify-content: center;
    }

    .social-share__label {
      width: 100%;
      text-align: center;
      margin-bottom: 0.5rem;
    }
  }
</style>

<div class={containerClasses} role="group" aria-label="Share this content">
  <span
    class="social-share__label text-sm font-semibold text-[color:var(--color-text-offset)] mr-2 self-center"
  >
    Share:
  </span>

  {
    selectedPlatforms.map(platform => {
      const shareUrl = platform.getShareUrl(shareData)
      const shareText = `${shareData.text} ${shareData.url}`

      // Mastodon uses modal, others use direct links
      if (platform.useModal) {
        return (
          <button
            type="button"
            class={`social-share__button inline-flex items-center gap-2 px-4 py-2 rounded-lg text-white font-medium transition-colors ${platform.colorClasses} hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}
            aria-label={platform.ariaLabel}
            data-platform={platform.id}
            data-share-text={shareText}
          >
            <Sprite name={platform.icon as SpriteName} class="h-4 w-4 fill-current" />
            <span class="hidden sm:inline">{platform.name}</span>
          </button>
        )
      }

      return (
        <a
          href={shareUrl}
          target="_blank"
          rel="noopener noreferrer"
          class={`social-share__button inline-flex items-center gap-2 px-4 py-2 rounded-lg text-white font-medium transition-colors ${platform.colorClasses} hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}
          aria-label={platform.ariaLabel}
        >
          <Sprite name={platform.icon as SpriteName} class="h-4 w-4 fill-current" />
          <span class="hidden sm:inline">{platform.name}</span>
        </a>
      )
    })
  }
</div>

<script>
  import { registerScript } from '@components/Scripts/loader/index'
  import { SocialShare } from './client'

  registerScript(SocialShare)
</script>