---
/**
 * Social Media Embed Component
 * Supports multiple platforms with lazy loading and oEmbed integration
 *
 * Supported platforms:
 * - X (Twitter)
 * - LinkedIn (requires embed code from post menu)
 * - Bluesky (requires explicit platform prop)
 * - Mastodon
 * - Reddit
 * - YouTube
 * - GitHub Gist
 * - CodePen
 *
 * Usage in MDX:
 *
 * Auto-detection (X, Reddit, YouTube, GitHub Gist, CodePen, Mastodon):
 * <Embed url="https://twitter.com/user/status/123456789" />
 *
 * Explicit platform (Bluesky):
 * <Embed url="https://bsky.app/profile/user.bsky.social/post/123abc" platform="bluesky" />
 *
 * LinkedIn (paste embed code from post's "Embed this post" option):
 * <Embed platform="linkedin" url="https://www.linkedin.com/embed/feed/update/...">
 * <iframe src="https://www.linkedin.com/embed/feed/update/..." height="593" width="504" frameborder="0" allowfullscreen="" title="Embedded post"></iframe>
 * </Embed>
 */

import type { EmbedPlatform } from './client'

interface Props {
  url: string
  platform?: EmbedPlatform
  className?: string
}

const { url, platform, className = '' } = Astro.props

// Determine the platform for placeholder styling
const detectedPlatform = platform || 'x' // Default to X for auto-detection
---

<div
  class={`embed-container ${className}`}
  data-embed
  data-embed-url={url}
  data-embed-platform={platform}
>
  {
    platform === 'linkedin' ? (
      // LinkedIn: slot the provided iframe
      <slot />
    ) : (
      // Other platforms: show placeholder that will be replaced
      <div data-embed-placeholder class={`embed-placeholder embed-placeholder--${detectedPlatform}`}>
        <div class="embed-placeholder__header">
          <div class="embed-placeholder__avatar"></div>
          <div class="embed-placeholder__author">
            <div class="embed-placeholder__name"></div>
            <div class="embed-placeholder__handle"></div>
          </div>
        </div>
        <div class="embed-placeholder__content">
          <div class="embed-placeholder__text-line"></div>
          <div class="embed-placeholder__text-line"></div>
          <div class="embed-placeholder__text-line embed-placeholder__text-line--short"></div>
        </div>
        {detectedPlatform === 'youtube' || detectedPlatform === 'codepen' ? (
          <div class="embed-placeholder__media"></div>
        ) : null}
        <div class="embed-placeholder__footer">
          <div class="embed-placeholder__action"></div>
          <div class="embed-placeholder__action"></div>
          <div class="embed-placeholder__action"></div>
        </div>
      </div>
    )
  }
</div>

<style>
  .embed-container {
    margin: 2rem auto;
    max-width: 550px;
  }

  .embed-placeholder {
    border: 1px solid var(--color-border, theme('colors.gray.200'));
    border-radius: 0.75rem;
    padding: 1rem;
    background: var(--color-bg, theme('colors.white'));
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
  }

  .embed-placeholder__header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .embed-placeholder__avatar {
    width: 3rem;
    height: 3rem;
    border-radius: 9999px;
    background: var(--color-text-offset, theme('colors.gray.300'));
    flex-shrink: 0;
  }

  .embed-placeholder__author {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .embed-placeholder__name {
    height: 1rem;
    width: 8rem;
    background: var(--color-text-offset, theme('colors.gray.300'));
    border-radius: 0.25rem;
  }

  .embed-placeholder__handle {
    height: 0.875rem;
    width: 6rem;
    background: var(--color-text-offset, theme('colors.gray.200'));
    border-radius: 0.25rem;
  }

  .embed-placeholder__content {
    margin-bottom: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .embed-placeholder__text-line {
    height: 0.875rem;
    background: var(--color-text-offset, theme('colors.gray.300'));
    border-radius: 0.25rem;
  }

  .embed-placeholder__text-line--short {
    width: 70%;
  }

  .embed-placeholder__media {
    width: 100%;
    aspect-ratio: 16 / 9;
    background: var(--color-text-offset, theme('colors.gray.300'));
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }

  .embed-placeholder__footer {
    display: flex;
    gap: 1rem;
    padding-top: 0.75rem;
    border-top: 1px solid var(--color-border, theme('colors.gray.200'));
  }

  .embed-placeholder__action {
    height: 1rem;
    width: 4rem;
    background: var(--color-text-offset, theme('colors.gray.200'));
    border-radius: 0.25rem;
  }

  /* Platform-specific adjustments */
  .embed-placeholder--youtube,
  .embed-placeholder--codepen {
    max-width: 640px;
  }

  .embed-placeholder--reddit {
    max-width: 800px;
  }

  .embed-placeholder--github-gist {
    max-width: 100%;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
  }

  /* LinkedIn responsive wrapper */
  :global(.embed-linkedin-wrapper) {
    position: relative;
    width: 100%;
    padding-bottom: 117.86%;
    max-width: 504px;
    margin: 0 auto;
  }

  :global(.embed-linkedin-wrapper iframe) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  /* Embed content styling */
  :global(.embed-content) {
    width: 100%;
  }

  :global(.embed-content iframe) {
    max-width: 100%;
  }

  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .embed-placeholder {
      background: var(--color-bg, theme('colors.gray.800'));
      border-color: var(--color-border, theme('colors.gray.700'));
    }

    .embed-placeholder__avatar,
    .embed-placeholder__name,
    .embed-placeholder__text-line,
    .embed-placeholder__media {
      background: var(--color-text-offset, theme('colors.gray.600'));
    }

    .embed-placeholder__handle,
    .embed-placeholder__action {
      background: var(--color-text-offset, theme('colors.gray.700'));
    }

    .embed-placeholder__footer {
      border-color: var(--color-border, theme('colors.gray.700'));
    }
  }
</style>

<script>
  import { registerScript } from '../../Scripts/loader'
  import { EmbedManager } from './client'

  // Register the embed manager with the delayed loader
  registerScript(EmbedManager)
</script>
