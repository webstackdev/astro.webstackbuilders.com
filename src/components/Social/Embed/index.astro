---
/**
 * Social Media Embed Component
 * Supports multiple platforms with lazy loading and oEmbed integration
 *
 * Supported platforms:
 * - X (Twitter)
 * - LinkedIn (requires embed code from post menu)
 * - Bluesky (requires explicit platform prop)
 * - Mastodon
 * - Reddit
 * - YouTube
 * - GitHub Gist
 * - CodePen
 *
 * Usage in MDX:
 *
 * Auto-detection (X, Reddit, YouTube, GitHub Gist, CodePen, Mastodon):
 * <Embed url="https://twitter.com/user/status/123456789" />
 *
 * Explicit platform (Bluesky):
 * <Embed url="https://bsky.app/profile/user.bsky.social/post/123abc" platform="bluesky" />
 *
 * LinkedIn (paste embed code from post's "Embed this post" option):
 * <Embed platform="linkedin" url="https://www.linkedin.com/embed/feed/update/...">
 * <iframe src="https://www.linkedin.com/embed/feed/update/..." height="593" width="504" frameborder="0" allowfullscreen="" title="Embedded post"></iframe>
 * </Embed>
 */

import type { EmbedPlatform } from './client'

interface Props {
  url: string
  platform?: EmbedPlatform
  className?: string
}

const { url, platform, className = '' } = Astro.props

// Determine the platform for placeholder styling
const detectedPlatform = platform || 'x' // Default to X for auto-detection

// Platform-specific max-width classes
const platformMaxWidth: Record<string, string> = {
  youtube: 'max-w-[640px]',
  codepen: 'max-w-[640px]',
  reddit: 'max-w-[800px]',
  'github-gist': 'max-w-full font-mono',
}
const maxWidthClass = platformMaxWidth[detectedPlatform] || 'max-w-[550px]'
---

<div
  class={`my-8 mx-auto ${maxWidthClass} ${className}`}
  data-embed
  data-embed-url={url}
  data-embed-platform={platform}
>
  {
    platform === 'linkedin' ? (
      // LinkedIn: slot the provided iframe
      <slot />
    ) : (
      // Other platforms: show placeholder that will be replaced
      <div
        data-embed-placeholder
        class="border border-gray-200 dark:border-gray-700 rounded-xl p-4 bg-white dark:bg-gray-800 shadow-sm animate-pulse"
      >
        <div class="flex items-center gap-3 mb-4">
          <div class="w-12 h-12 rounded-full bg-gray-300 dark:bg-gray-600 flex-shrink-0"></div>
          <div class="flex-1 flex flex-col gap-2">
            <div class="h-4 w-32 bg-gray-300 dark:bg-gray-600 rounded"></div>
            <div class="h-3.5 w-24 bg-gray-200 dark:bg-gray-700 rounded"></div>
          </div>
        </div>
        <div class="mb-4 flex flex-col gap-2">
          <div class="h-3.5 bg-gray-300 dark:bg-gray-600 rounded"></div>
          <div class="h-3.5 bg-gray-300 dark:bg-gray-600 rounded"></div>
          <div class="h-3.5 w-[70%] bg-gray-300 dark:bg-gray-600 rounded"></div>
        </div>
        {detectedPlatform === 'youtube' || detectedPlatform === 'codepen' ? (
          <div class="w-full aspect-video bg-gray-300 dark:bg-gray-600 rounded-lg mb-4"></div>
        ) : null}
        <div class="flex gap-4 pt-3 border-t border-gray-200 dark:border-gray-700">
          <div class="h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded"></div>
          <div class="h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded"></div>
          <div class="h-4 w-16 bg-gray-200 dark:bg-gray-700 rounded"></div>
        </div>
      </div>
    )
  }
</div>

<script>
  import { registerScript } from '../../Scripts/loader'
  import { EmbedManager } from './client'

  // Register the embed manager with the delayed loader
  registerScript(EmbedManager)
</script>
