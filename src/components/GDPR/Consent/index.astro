---
/**
 * GDPR Consent Component
 *
 * Reusable checkbox component for GDPR-compliant data collection consent.
 * Use in forms that collect personal data (contact forms, newsletter, etc.)
 *
 * @example
 * ```astro
 * <GDPRConsent
 *   purposes={['contact', 'marketing']}
 *   required={true}
 * />
 * ```
 */

export interface Props {
  /** Data processing purposes user is consenting to */
  purposes: Array<'contact' | 'marketing' | 'analytics' | 'downloads'>

  /** Whether consent is required to submit form */
  required?: boolean

  /** Custom consent text (overrides default) */
  customText?: string

  /** Link to Privacy Policy */
  privacyPolicyUrl?: string

  /** Link to Cookie Policy */
  cookiePolicyUrl?: string

  /** Input element name attribute */
  name?: string

  /** Input element ID attribute */
  id?: string

  /** Form identifier (for tracking in consent logs) */
  formId?: string
}

const {
  purposes,
  required = false,
  customText,
  privacyPolicyUrl = '/privacy/',
  cookiePolicyUrl = '/cookies/',
  name = 'gdpr_consent',
  id = 'gdpr-consent',
  formId
} = Astro.props

// Generate purpose descriptions
const purposeDescriptions: Record<string, string> = {
  contact: 'Responding to your inquiry',
  marketing: 'Sending marketing communications (unsubscribe anytime)',
  analytics: 'Analyzing website usage to improve our services',
  downloads: 'Providing access to requested content'
}

const purposeList = purposes.map(p => purposeDescriptions[p] || p)
---

<div
  class="gdpr-consent"
  id={`${id}-container`}
  data-component="gdpr-consent"
  data-purposes={JSON.stringify(purposes)}
  data-form-id={formId}
>
  <label class="gdpr-consent__label">
    <input
      type="checkbox"
      name={name}
      id={id}
      required={required}
      aria-required={required ? 'true' : 'false'}
      aria-describedby={`${id}-description`}
      class="gdpr-consent__checkbox"
    />
    <span id={`${id}-description`} class="gdpr-consent__text">
      {customText ? (
        <Fragment set:html={customText} />
      ) : (
        <>
          I consent to Webstack Builders processing my personal data for:
          <ul class="gdpr-consent__purposes">
            {purposeList.map(purpose => (
              <li>{purpose}</li>
            ))}
          </ul>
          See our <a href={privacyPolicyUrl}>Privacy Policy</a> and{' '}
          <a href={cookiePolicyUrl}>Cookie Policy</a>.
        </>
      )}
    </span>
  </label>
  <div
    class="gdpr-consent__error"
    id={`${id}-error`}
    role="alert"
    aria-live="polite"
    style="display: none;"
  ></div>
</div>

<script>
  import { initGDPRConsent } from './client'
  import type { ConsentPurpose } from './state'

  // Initialize all GDPR consent checkboxes on the page
  document.addEventListener('DOMContentLoaded', () => {
    const consentContainers = document.querySelectorAll('[data-component="gdpr-consent"]')

    consentContainers.forEach((container) => {
      if (!(container instanceof HTMLElement)) return

      const checkbox = container.querySelector<HTMLInputElement>('input[type="checkbox"]')
      if (!checkbox) return

      const purposes = JSON.parse(
        container.dataset.purposes || '[]'
      ) as ConsentPurpose[]
      const formId = container.dataset.formId

      initGDPRConsent(checkbox.id, purposes, formId)
    })
  })
</script>

<style>
  .gdpr-consent {
    margin: 1.5rem 0;
    padding: 1rem;
    border: 1px solid var(--color-theme-border, #e5e7eb);
    border-radius: 0.5rem;
    background-color: var(--color-theme-bg-offset, #f9fafb);
  }

  .gdpr-consent__label {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    cursor: pointer;
  }

  .gdpr-consent__checkbox {
    flex-shrink: 0;
    width: 1.25rem;
    height: 1.25rem;
    margin-top: 0.125rem;
    cursor: pointer;
    border: 2px solid var(--color-theme-border, #d1d5db);
    border-radius: 0.25rem;
  }

  .gdpr-consent__checkbox:focus {
    outline: 2px solid var(--color-theme-primary, #3b82f6);
    outline-offset: 2px;
  }

  .gdpr-consent__checkbox:checked {
    background-color: var(--color-theme-primary, #3b82f6);
    border-color: var(--color-theme-primary, #3b82f6);
  }

  .gdpr-consent__text {
    flex: 1;
    font-size: 0.875rem;
    line-height: 1.5;
    color: var(--color-theme-text, #1f2937);
  }

  .gdpr-consent__purposes {
    margin: 0.5rem 0;
    padding-left: 1.5rem;
    list-style-type: disc;
  }

  .gdpr-consent__purposes li {
    margin: 0.25rem 0;
  }

  .gdpr-consent__text a {
    color: var(--color-theme-link, #3b82f6);
    text-decoration: underline;
  }

  .gdpr-consent__text a:hover {
    color: var(--color-theme-link-hover, #2563eb);
  }

  .gdpr-consent__error {
    margin-top: 0.5rem;
    padding: 0.5rem;
    font-size: 0.875rem;
    color: var(--color-theme-danger, #dc2626);
    background-color: var(--color-theme-danger-bg, #fee2e2);
    border-radius: 0.25rem;
  }
</style>
