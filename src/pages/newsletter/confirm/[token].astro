---
/**
 * Newsletter Confirmation Page
 * Handles double opt-in confirmation link from email
 * GDPR-compliant newsletter subscription verification
 *
 * This page calls the API endpoint to process confirmation server-side
 */
import PageLayout from '@layouts/PageLayout.astro'

// This is a server-rendered dynamic route
export const prerender = false

// Initialize page title for server-side render
const pageTitle = 'Confirming Your Subscription...'
const subtitle = 'Please wait while we confirm your subscription'
---

<PageLayout pageTitle={pageTitle} path="newsletter/confirm" subtitle={subtitle}>
  <div class="container mx-auto px-4 py-16 max-w-2xl">
    <div class="bg-base border border-offset rounded-lg p-8 shadow-sm">

      <!-- Loading state -->
      <div id="loading-state">
        <div class="text-center">
          <svg class="w-16 h-16 mx-auto text-accent mb-4 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
          <h1 class="text-2xl font-bold text-text mb-2">Confirming your subscription...</h1>
          <p class="text-text-offset">Please wait while we verify your confirmation link.</p>
        </div>
      </div>

      <!-- Success state -->
      <div id="success-state" class="hidden">
        <div class="text-center mb-6">
          <svg class="w-16 h-16 mx-auto text-green-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <h1 class="text-3xl font-bold text-text mb-2">Subscription Confirmed!</h1>
        </div>

        <div class="prose prose-invert max-w-none">
          <p class="text-lg text-text-offset mb-4">
            Thank you for confirming your subscription, <strong id="user-email"></strong>!
          </p>

          <p class="text-text-offset mb-4">
            You're now subscribed to our newsletter and will receive:
          </p>

          <ul class="text-text-offset mb-6">
            <li>Web development insights and best practices</li>
            <li>Updates about new articles and case studies</li>
            <li>Exclusive Webstack Builders news</li>
          </ul>

          <div class="bg-offset border border-offset rounded p-4 text-sm text-text-offset mb-6">
            <p class="font-semibold mb-2">Your Rights:</p>
            <p>
              You can unsubscribe at any time using the link in any email we send.
              See our <a href="/privacy/" class="text-accent hover:underline">Privacy Policy</a>
              for details about how we handle your data.
            </p>
          </div>

          <div class="text-center">
            <a href="/articles/" class="inline-block bg-accent text-text-inverse px-6 py-3 rounded-lg hover:bg-accent-hover transition-colors font-semibold">
              Browse Our Articles
            </a>
          </div>
        </div>
      </div>

      <!-- Expired state -->
      <div id="expired-state" class="hidden">
        <div class="text-center mb-6">
          <svg class="w-16 h-16 mx-auto text-yellow-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <h1 class="text-3xl font-bold text-text mb-2">Confirmation Link Expired</h1>
        </div>

        <div class="prose prose-invert max-w-none">
          <p class="text-lg text-text-offset mb-4">
            This confirmation link has expired or has already been used.
          </p>

          <p class="text-text-offset mb-6">
            Confirmation links are valid for 24 hours for security reasons.
            If you'd like to subscribe, please sign up again below.
          </p>

          <div class="text-center">
            <a href="/#newsletter" class="inline-block bg-accent text-text-inverse px-6 py-3 rounded-lg hover:bg-accent-hover transition-colors font-semibold">
              Sign Up Again
            </a>
          </div>
        </div>
      </div>

      <!-- Error state -->
      <div id="error-state" class="hidden">
        <div class="text-center mb-6">
          <svg class="w-16 h-16 mx-auto text-red-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <h1 class="text-3xl font-bold text-text mb-2" id="error-title">Confirmation Error</h1>
        </div>

        <div class="prose prose-invert max-w-none">
          <p class="text-lg text-text-offset mb-4" id="error-message">
            An error occurred while confirming your subscription.
          </p>

          <p class="text-sm text-red-400 mb-6 hidden" id="error-details"></p>

          <p class="text-text-offset mb-6">
            If you believe this is an error, please try signing up again or
            <a href="/contact/" class="text-accent hover:underline">contact us</a> for assistance.
          </p>

          <div class="text-center">
            <a href="/#newsletter" class="inline-block bg-accent text-text-inverse px-6 py-3 rounded-lg hover:bg-accent-hover transition-colors font-semibold mr-4">
              Sign Up
            </a>
            <a href="/contact/" class="inline-block bg-offset text-text px-6 py-3 rounded-lg hover:bg-offset-hover transition-colors font-semibold">
              Get Help
            </a>
          </div>
        </div>
      </div>

    </div>
  </div>

  <script>
    // Get token from URL
    const pathParts = window.location.pathname.split('/')
    const token = pathParts[pathParts.length - 1]

    // Get all state elements
    const loadingState = document.getElementById('loading-state')
    const successState = document.getElementById('success-state')
    const expiredState = document.getElementById('expired-state')
    const errorState = document.getElementById('error-state')

    /** Hide all state elements */
    function hideAllStates() {
      loadingState?.classList.add('hidden')
      successState?.classList.add('hidden')
      expiredState?.classList.add('hidden')
      errorState?.classList.add('hidden')
    }

    /** Show success state with user email */
    function showSuccess(email: string) {
      hideAllStates()
      const emailElement = document.getElementById('user-email')
      if (emailElement) emailElement.textContent = email
      successState?.classList.remove('hidden')
    }

    /** Show expired link state */
    function showExpired() {
      hideAllStates()
      expiredState?.classList.remove('hidden')
    }

    /** Show error state with custom message */
    function showError(title: string, message: string, details?: string) {
      hideAllStates()
      const titleElement = document.getElementById('error-title')
      const messageElement = document.getElementById('error-message')
      const detailsElement = document.getElementById('error-details')

      if (titleElement) titleElement.textContent = title
      if (messageElement) messageElement.textContent = message

      if (details && detailsElement) {
        detailsElement.textContent = `Error details: ${details}`
        detailsElement.classList.remove('hidden')
      }

      errorState?.classList.remove('hidden')
    }

    /** Call confirmation API endpoint */
    async function confirmSubscription() {
      if (!token) {
        showError('Invalid Link', 'This confirmation link is invalid or malformed.')
        return
      }

      try {
        const response = await fetch(`/api/newsletter/confirm?token=${encodeURIComponent(token)}`)
        const data = await response.json()

        if (data.success) {
          showSuccess(data.email || 'your email')
        } else if (data.status === 'expired') {
          showExpired()
        } else {
          showError('Confirmation Error', data.message || 'An error occurred while confirming your subscription.')
        }
      } catch (error) {
        console.error('Failed to confirm subscription:', error)
        showError(
          'Confirmation Error',
          'An error occurred while confirming your subscription.',
          error instanceof Error ? error.message : 'Network or server error'
        )
      }
    }

    // Run confirmation on page load
    confirmSubscription()
  </script>
</PageLayout>
