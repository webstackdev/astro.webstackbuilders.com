---
import { getCollection } from 'astro:content'
import MarkdownLayout, { Carousel } from '@layouts/MarkdownLayout.astro'

/** Generate static paths for all services */
export async function getStaticPaths() {
  const serviceEntries = await getCollection('services')
  return serviceEntries.map(service => ({
    params: { slug: service.id },
    props: { service },
  }))
}

const { service } = Astro.props
const path = `/services/${service.id}/`
const pageTitle = service.data.title
const icon = service.data.icon ? { src: service.data.icon, alt: service.data.title } : undefined
---

<MarkdownLayout
  pageTitle={pageTitle}
  path={path}
  contentType="article"
  publishDate={service.data.publishDate}
  section="Services"
  tags={service.data.tags}
  {...(service.data.description && { description: service.data.description })}
  {...(icon?.src && { image: icon.src })}
  showToc={false}
>
  {
    icon && (
      <div
        class="w-20 h-20 mx-auto mb-8 bg-[var(--color-theme-primary-offset)] rounded-xl flex items-center justify-center"
        slot="hero-image"
      >
        <img src={icon.src} alt={icon.alt} loading="eager" class="w-10 h-10" />
      </div>
    )
  }

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-3xl mx-auto mb-8">
    {
      service.data.category && (
        <div class="bg-[var(--color-theme-bg-offset)] rounded-lg p-4">
          <div class="text-sm font-semibold text-[var(--color-theme-text-offset)] uppercase tracking-wide mb-1">
            Category
          </div>
          <div class="text-[var(--color-theme-text)]">{service.data.category}</div>
        </div>
      )
    }
    {
      service.data.pricing && (
        <div class="bg-[var(--color-theme-bg-offset)] rounded-lg p-4">
          <div class="text-sm font-semibold text-[var(--color-theme-text-offset)] uppercase tracking-wide mb-1">
            Pricing
          </div>
          <div class="text-[var(--color-theme-text)]">{service.data.pricing}</div>
        </div>
      )
    }
    {
      service.data.duration && (
        <div class="bg-[var(--color-theme-bg-offset)] rounded-lg p-4">
          <div class="text-sm font-semibold text-[var(--color-theme-text-offset)] uppercase tracking-wide mb-1">
            Typical Duration
          </div>
          <div class="text-[var(--color-theme-text)]">{service.data.duration}</div>
        </div>
      )
    }
    {
      service.data.deliverables && service.data.deliverables.length > 0 && (
        <div class="bg-[var(--color-theme-bg-offset)] rounded-lg p-4 md:col-span-2 lg:col-span-3">
          <div class="text-sm font-semibold text-[var(--color-theme-text-offset)] uppercase tracking-wide mb-3">
            Deliverables
          </div>
          <ul class="space-y-2">
            {service.data.deliverables.map((deliverable: string) => (
              <li class="flex items-start">
                <svg
                  class="w-5 h-5 text-[var(--color-theme-success)] mr-2 mt-0.5 flex-shrink-0"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clip-rule="evenodd"
                  />
                </svg>
                <span class="text-[var(--color-theme-text-offset)]">{deliverable}</span>
              </li>
            ))}
          </ul>
        </div>
      )
    }
  </div>

  <div set:html={service.rendered?.html || ''} />

  <div class="border-t border-[var(--color-theme-border)] pt-8 mt-12" slot="related-content">
    <header class="mb-8">
      <h3 class="text-2xl font-bold text-[var(--color-theme-text)]">Other Services I Offer</h3>
    </header>
    <Carousel currentSlug={service.id} variant="suggested" limit={4} title="" type="services" />
  </div>
</MarkdownLayout>

