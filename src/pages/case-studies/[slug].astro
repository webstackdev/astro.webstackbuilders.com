---
import { getCollection } from 'astro:content'
import BaseLayout from "../../layouts/BaseLayout.astro"
import SuggestedCaseStudies from "../../components/SuggestedCaseStudies/SuggestedCaseStudies.astro"

export async function getStaticPaths() {
  const caseStudyEntries = await getCollection('caseStudies')
  return caseStudyEntries.map(caseStudy => ({
    params: { slug: caseStudy.id }, props: { caseStudy },
  }))
}

const { caseStudy } = Astro.props
const path = `/case-studies/${caseStudy.id}/`
const pageTitle = caseStudy.data.title
const cover = caseStudy.data.image ? (
  typeof caseStudy.data.image === 'string'
    ? { src: caseStudy.data.image, alt: caseStudy.data.title }
    : caseStudy.data.image
) : undefined
const meta = {
  date: caseStudy.data.publishDate,
  client: caseStudy.data.client,
  industry: caseStudy.data.industry,
  technologies: caseStudy.data.tags,
  projectType: caseStudy.data.projectType,
  duration: caseStudy.data.duration,
  draft: caseStudy.data.isDraft || false
}
---

<BaseLayout pageTitle={pageTitle} path={path}>
  <article
    id="case-study"
    class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8"
    itemscope
    itemtype="http://schema.org/CreativeWork"
    aria-labelledby="case-study-title"
  >
    <header class="py-8 md:py-16 lg:py-20 text-center space-y-6">
      {cover && (
        <div class="aspect-video max-w-3xl mx-auto rounded-2xl overflow-hidden shadow-lg" itemtype="image">
          <img
            src={cover.src}
            alt={cover.alt}
            loading="eager"
            class="w-full h-full object-cover"
          />
        </div>
      )}
      <h1
        id="case-study-title"
        class="text-3xl md:text-4xl lg:text-5xl font-bold text-[var(--color-theme-text)] leading-tight"
        itemprop="headline"
      >
        {pageTitle}
      </h1>
      <div class="space-y-4 max-w-2xl mx-auto">
        <time
          class="block text-lg text-[var(--color-theme-text-offset)]"
          itemprop="datePublished"
          datetime={meta.date.toISOString()}
        >
          {meta.date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>

        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">
          {meta.client && (
            <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
              <span class="font-semibold text-[var(--color-theme-text)]">Client:</span>
              <span class="ml-2 text-[var(--color-theme-text-offset)]">{meta.client}</span>
            </div>
          )}
          {meta.industry && (
            <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
              <span class="font-semibold text-[var(--color-theme-text)]">Industry:</span>
              <span class="ml-2 text-[var(--color-theme-text-offset)]">{meta.industry}</span>
            </div>
          )}
          {meta.projectType && (
            <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
              <span class="font-semibold text-[var(--color-theme-text)]">Project Type:</span>
              <span class="ml-2 text-[var(--color-theme-text-offset)]">{meta.projectType}</span>
            </div>
          )}
          {meta.duration && (
            <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
              <span class="font-semibold text-[var(--color-theme-text)]">Duration:</span>
              <span class="ml-2 text-[var(--color-theme-text-offset)]">{meta.duration}</span>
            </div>
          )}
        </div>

        {meta.technologies && meta.technologies.length > 0 && (
          <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
            <span class="font-semibold text-[var(--color-theme-text)] block mb-3">Technologies:</span>
            <div class="flex flex-wrap gap-2">
              {meta.technologies.map((tech: string) => (
                <span class="text-xs font-medium text-[var(--color-theme-primary)] bg-[var(--color-theme-primary-offset)] px-3 py-1 rounded-full">
                  {tech}
                </span>
              ))}
            </div>
          </div>
        )}

        {meta.draft && (
          <div class="inline-block bg-[var(--color-theme-secondary-offset)] text-[var(--color-theme-secondary)] px-4 py-2 rounded-full text-sm font-medium">
            (Draft)
          </div>
        )}
      </div>
    </header>
    <div class="prose prose-lg max-w-none py-8 text-[var(--color-theme-text)]" itemprop="text">
      <div set:html={caseStudy.rendered?.html || ''} />
    </div>
    <div class="border-t border-[var(--color-theme-border)] pt-8 mt-12">
      <header class="mb-8">
        <h3 class="text-2xl font-bold text-[var(--color-theme-text)]">Other projects I've worked on</h3>
      </header>
      <SuggestedCaseStudies currentSlug={caseStudy.id} limit={4} />
    </div>
  </article>
</BaseLayout>