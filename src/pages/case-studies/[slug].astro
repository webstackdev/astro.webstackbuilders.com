---
import { getCollection } from 'astro:content'
import MarkdownLayout, { Carousel } from '@layouts/MarkdownLayout.astro'
import { WebMentions } from '@components/WebMentions'

/** Generate static paths for all case studies */
export async function getStaticPaths() {
  const caseStudyEntries = await getCollection('caseStudies')
  return caseStudyEntries.map(caseStudy => ({
    params: { slug: caseStudy.id },
    props: { caseStudy },
  }))
}

const { caseStudy } = Astro.props
const path = `/case-studies/${caseStudy.id}`
const pageTitle = caseStudy.data.title
const cover = caseStudy.data.image
  ? typeof caseStudy.data.image === 'string'
    ? { src: caseStudy.data.image, alt: caseStudy.data.title }
    : caseStudy.data.image
  : undefined
---

<MarkdownLayout
  pageTitle={pageTitle}
  path={path}
  contentType="article"
  publishDate={caseStudy.data.publishDate}
  section="Case Studies"
  tags={caseStudy.data.tags}
  {...(caseStudy.data.description && { description: caseStudy.data.description })}
  {...(cover?.src && { image: cover.src })}
  showToc={false}
>
  {
    cover && (
      <div
        class="aspect-video max-w-3xl mx-auto rounded-2xl overflow-hidden shadow-lg mb-8"
        slot="hero-image"
      >
        <img src={cover.src} alt={cover.alt} loading="eager" class="w-full h-full object-cover" />
      </div>
    )
  }

  <div class="space-y-4 max-w-2xl mx-auto mb-8">
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">
      {
        caseStudy.data.client && (
          <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
            <span class="font-semibold text-[var(--color-theme-text)]">Client:</span>
            <span class="ml-2 text-[var(--color-theme-text-offset)]">
              {caseStudy.data.client}
            </span>
          </div>
        )
      }
      {
        caseStudy.data.industry && (
          <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
            <span class="font-semibold text-[var(--color-theme-text)]">Industry:</span>
            <span class="ml-2 text-[var(--color-theme-text-offset)]">
              {caseStudy.data.industry}
            </span>
          </div>
        )
      }
      {
        caseStudy.data.projectType && (
          <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
            <span class="font-semibold text-[var(--color-theme-text)]">Project Type:</span>
            <span class="ml-2 text-[var(--color-theme-text-offset)]">
              {caseStudy.data.projectType}
            </span>
          </div>
        )
      }
      {
        caseStudy.data.duration && (
          <div class="bg-[var(--color-theme-bg-offset)] p-4 rounded-xl">
            <span class="font-semibold text-[var(--color-theme-text)]">Duration:</span>
            <span class="ml-2 text-[var(--color-theme-text-offset)]">
              {caseStudy.data.duration}
            </span>
          </div>
        )
      }
    </div>
  </div>

  <div set:html={caseStudy.rendered?.html || ''} />

  <div slot="after-content">
    {/* WebMentions - shows mentions, likes, and reposts from across the web */}
    <WebMentions url={`https://webstackbuilders.com${path}`} />
  </div>

  <div class="border-t border-[var(--color-theme-border)] pt-8 mt-12" slot="related-content">
    <header class="mb-8">
      <h3 class="text-2xl font-bold text-[var(--color-theme-text)]">Other projects I've worked on</h3>
    </header>
    <Carousel title="" variant="suggested" currentSlug={caseStudy.id} limit={4} type="case-studies" />
  </div>
</MarkdownLayout>

